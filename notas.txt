Pasos:

1. Definir estructura del proyecto
    - public
        * Index.html
    - src
        - components
        * index.js
2. Instalar react en proyecto
    npm i react react-dom

Crear componente 
configurar entrada en index.js

3. Configurar Babel
    npm i @babel/core babel-loader @babel/preset-env @babel/preset-react --save-dev
    crear en archivo de configuracion de babel .babelrc

4. Instalar y configurar webpack (agrupa archivos para produccion o dev)
    npm i webpack webpack-cli html-webpack-plugin html-loader --save-dev
    crear archivo de configuracion de webpack

crear script de compilacion en package.json

"build": "webpack --mode production"

instalar npm i webpack-dev-server --save-dev

configurar en package.json el dev-servers

trabajar con sass estraee css del bundle resultante 
npm i mini-css-extract-plugin css-loader node-sass sass-loader --save-dev

se a単ade la regla en webpack

instalar ESLint 
npm i eslint babel-eslint eslint-config-airbnb eslint-plugin-import eslint-plugin-react eslint-plugin-jsx-a11y

a単adir configuracion
crear .eslintrc y pegar lo de la url https://gist.github.com/gndx/60ae8b1807263e3a55f790ed17c4c57a


crear aplicacion y componentes con estilos

agregar imagenes a webpack 
npm i file-loader --save-dev

configurar archivo webpack para las imagenes

para simular una api con un archivo .json se usa json-server
npm i json-server -g 

iniciar servidor json-server initialState.json


para a単adir propTypes al proyecto
npm i prop-types

-- Curso de React Router y Redux

instalar react router
npm i react-router-dom --save

a単adir configuracion en webpack para que reconosca las rutas del react-router

